{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_print\" id=\"SlwWqO?*@fBVbfc]q-B4\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"nqpUMU,3YK$y,S!hrI0t\"><field name=\"TEXT\">Right 90 Degrees</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"mL6!-:f4,c@/3ZJoCwQ~\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"FpnJH8@-t(*jzFch2Z!N\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_control_repeat\" id=\"U}.a9*9N+8phLEr(:4rq\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"C-tNimWhdA{ON)o.grA6\"><field name=\"NUM\">10</field></shadow></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_print\" id=\"$W47DjFT5S.jJ[j(F2.5\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"dzQ2S#CRcE9pzeS;EG_d\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_battery_voltage\" id=\"ZanDZ+K^UNMpupnF{Ezm\"></block></value><next><block type=\"v5_looks_print\" id=\"qYw^dYUXCECSeNXzI-eD\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\";)WIQ~HCgNQO2nxe$40m\"><field name=\"TEXT\"> Volt and heading: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"3H3=9fU_PBTNXYLqg!El\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"$S%e4ACBE{4,wi,GnPfa\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_drive_heading\" id=\"T7;6PYKWB[VvzG^uZ;iq\"></block></value><next><block type=\"v5_control_wait\" id=\"!Pgschy*#wHPva[!eAs4\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"Ark,Nn7ju~.p?(UaYPIi\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></statement><next><block type=\"v5_looks_print\" id=\"ZFh2=y]PV|,w+ukU93=M\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"usX7$h26rUIA.m:*NQ0@\"><field name=\"TEXT\">Forward 200mm</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"Qy?=(5YL50UMto|02u.P\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"`GVp!ooudZ.-mCa4#.=i\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_looks_print\" id=\"zgm+m,`Uh5;~{ho?mB5#\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"%aM_R=JXm64,U,dqDUBK\"><field name=\"TEXT\">Left 90 degrees</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"iG2T:zV@*bu/~xcfCZrn\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Q(t$k(KTt1wRKk?Wh8S;\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_control_repeat\" id=\"cUO+`(3Z@N2-9$W%./hu\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"RrA0i(cca[z)p;]G^QPP\"><field name=\"NUM\">10</field></shadow></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_print\" id=\"mxzWJ/](=^%2,v:EyLr(\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"6{JH{yPI?7f:Ww0!@PwV\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_battery_voltage\" id=\"I8qzelr1JU2d!.kFuOIi\"></block></value><next><block type=\"v5_looks_print\" id=\"AR4%ay}c$:v?/SO7-s3F\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"tHKsK0]AF@HXWZyQdvh4\"><field name=\"TEXT\"> Volt and heading: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"S$OKQ$)|+i4X7@Ck_=+H\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"bN$xiE+PQC{j.:#A.0/3\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_drive_heading\" id=\"r#blpo*`5:X4,Vii;^(w\"></block></value><next><block type=\"v5_control_wait\" id=\"(OzvlcJ3[rr~7rlsXP+p\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"(MO-]Hh4K~Q{$:bAR!.-\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></statement><next><block type=\"v5_control_stop_project\" id=\"@8Bx=X0d(TR~|ReD?~@V\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,2,3,4,2],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"threewire","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor leftMotorA = motor(PORT1, ratio18_1, false);\nmotor leftMotorB = motor(PORT2, ratio18_1, false);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT3, ratio18_1, true);\nmotor rightMotorB = motor(PORT4, ratio18_1, true);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ngyro DrivetrainGyro = gyro(Brain.ThreeWirePort.B);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainGyro, 319.19, 320, 40, mm, 1);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Gyro\");\n  DrivetrainGyro.calibrate();\n  while (DrivetrainGyro.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.print(\"Right 90 Degrees\");\n  Brain.Screen.newLine();\n  Drivetrain.turnFor(right, 90.0, degrees, false);\n  repeat(10) {\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Brain.Battery.voltage(volt)));\n    Brain.Screen.print(\" Volt and heading: \");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Drivetrain.heading()));\n    Brain.Screen.newLine();\n    wait(1.0, seconds);\n    wait(5, msec);\n  }\n  Brain.Screen.print(\"Forward 200mm\");\n  Brain.Screen.newLine();\n  Drivetrain.driveFor(forward, 200.0, mm, true);\n  Brain.Screen.print(\"Left 90 degrees\");\n  Brain.Screen.newLine();\n  Drivetrain.turnFor(left, 90.0, degrees, false);\n  repeat(10) {\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Brain.Battery.voltage(volt)));\n    Brain.Screen.print(\" Volt and heading: \");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Drivetrain.heading()));\n    Brain.Screen.newLine();\n    wait(1.0, seconds);\n    wait(5, msec);\n  }\n  vexSystemExitRequest();\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}