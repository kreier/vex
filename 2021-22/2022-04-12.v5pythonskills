{"mode":"Text","textContent":"# 130 points - 45 lines - 30 seconds - 12.04.2022\nfrom vexcode_vrc import *\nfrom math import sqrt\npath = [[-920,  920, 0],[-920,-1450, 0],[750, -1400, 0],[ 500,-1150, 1],\n        [-600, -710, 0],[ 400, -250, 1],[   0,    0, 0],[-600,  200, 0],\n        [ 400,  400, 1],[   0,  950, 0],[-600,  950, 0],[ 920,  950, 1],\n        [ 920, 1500, 0],[-600, 1320, 0],[ 600,  600, 1],[ 600, -600, 1],\n        [1400,-1350, 1],[1500, -900, 0]]\ndef goto(target_x, target_y, reverse):\n    x1 = gps.x_position(MM)\n    y1 = gps.y_position(MM)\n    delta_x = target_x - x1\n    delta_y = target_y - y1\n    distance = math.sqrt(delta_x**2 + delta_y**2)     # pythagorean theorem\n    if ( delta_x == 0 ):\n        if ( delta_y < 0):\n            direction = 90\n        else:\n            direction = 270\n    else:\n        direction = - math.atan(delta_y / delta_x) * 180 / math.pi\n    if ( delta_x < 0 ):\n        direction = direction + 180\n    if ( reverse != 0 ):\n        direction = direction + 180\n    if ( direction > 360 ):\n        direction = direction - 360\n    drivetrain.turn_to_heading(direction, DEGREES, wait=True)\n    if ( reverse != 0 ):\n        drivetrain.drive_for(REVERSE, distance, MM, wait=True)\n    else:\n        drivetrain.drive_for(FORWARD, distance, MM, wait=True)\ndef pick_up():\n    fork_motor_group.spin_to_position(1500, DEGREES, wait=True)\ndef set_down():\n    fork_motor_group.spin_to_position(1800, DEGREES, wait=True)\ndef main():\n    drivetrain.set_drive_velocity(100,PERCENT)\n    fork_motor_group.spin_to_position(1800, DEGREES, wait=False)\n    for x, y, r in path:\n        goto(x, y, r)\n    pick_up() \n    goto( 1500,  100, 0)\n    stop_project()\nvr_thread(main)","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"","appVersion":"","fileFormat":"1.0.1","icon":"","target":"Virtual"}