{"mode":"Text","textContent":"#----------------------------------------------------------------------\n#   \n#   Project:            Calling GPS functions\n#   Description:        Get more than 100 points with GPS\n#                       Driving style: drive, check, correct\n#   Date:               08.11.2021\n#   Maximum score:      130 points\n#   Time left:          10 seconds\n#\n#   Starting position:  A\n#   Orientation:        Facing East (standard)\n#   Preload:            Zero Rings\n#\n#----------------------------------------------------------------------\n\n# Library imports\nfrom vexcode_vrc import *\n\ndef move(direction, coordinate, reverse):\n    global angle, x, y, head, dist\n    angle = 0\n    x = gps.x_position(MM)\n    y = gps.y_position(MM)\n    head = gps.heading()   # north is 0, but for the robot 0 is east - from start    \n    monitor_variable(\"angle\",\"dist\",\"x\",\"y\",\"head\") \n    if ( direction == \"right\" ):\n        angle = 0\n        dist = coordinate - gps.x_position(MM)\n    if ( direction == \"left\" ):\n        angle = 180\n        dist = gps.x_position(MM) - coordinate\n    if ( direction == \"up\" ):\n        angle = 270\n        dist = coordinate - gps.y_position(MM)\n    if ( direction == \"down\" ):\n        angle = 90\n        dist = gps.y_position(MM) - coordinate\n    drivetrain.turn_to_heading(angle, DEGREES, wait=True)\n    if (reverse == 0):\n        drivetrain.drive_for(FORWARD, dist, MM, wait=True)\n    else:\n        drivetrain.drive_for(REVERSE, -dist, MM, wait=True)\n\ndef pick_up():\n    fork_motor_group.spin_to_position(1500, DEGREES, wait=True)\n\ndef set_down():\n    fork_motor_group.spin_to_position(1800, DEGREES, wait=True)\n\n# Add project code in \"main\"\ndef main():\n    global stage\n    stage = \"Initiate system\"\n    monitor_variable(\"stage\")\n    drivetrain.set_drive_velocity(60,PERCENT)\n\n    stage = \"Get 1st yellow goal\"\n    fork_motor_group.spin_to_position(1800, DEGREES, wait=False)\n    move(\"right\", -920, 0)\n    move(\"down\", -1300, 0)\n    pick_up()\n    move(\"right\", 1000, 0)\n    set_down()\n    move(\"right\", -900, 1)\n\n    move(\"down\",  -930, 0)\n    move(\"right\", -180, 0)\n    pick_up()\n    move(\"right\", -930, 0)\n    move(\"down\",  -950, 0)\n    set_down()\n\n    stage = \"Get 2nd yellow goal\"\n    move(\"down\",   -50, 1)\n    move(\"right\", -180, 0)\n    pick_up()\n    move(\"right\", -850, 0)\n    move(\"down\",   -70, 0)\n    set_down()\n\n    stage = \"Remove the blue goal\"\n    move(\"down\",  1200, 1)\n    move(\"left\", -1500, 0)\n    move(\"down\",   900, 0)\n    pick_up()\n    move(\"down\",  1200, 0)\n    stage = \"Put blue goal down\"\n    drivetrain.turn_to_heading(180, DEGREES, wait=True)\n    move(\"up\",    1450, 0)\n    set_down()\n    move(\"up\",    1150, 1)\n \n    stage = \"Get 3rd yellow goal\"\n    move(\"left\",  -980, 1)\n    move(\"down\",   900, 0)\n    move(\"right\", -180, 0)\n    pick_up()\n    fork_motor_group.spin_to_position(400, DEGREES, wait=False)\n    move(\"right\", -500, 0)\n    move(\"down\",   920, 0)\n    move(\"left\", -1500, 1)\n    move(\"down\",   600, 0)\n    set_down()\n    move(\"down\",  -100, 0)\n    stop_project()\n\n# VR threads - Do not delete\nvr_thread(main)","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"","appVersion":"","fileFormat":"1.0.1","icon":"","target":"Virtual"}